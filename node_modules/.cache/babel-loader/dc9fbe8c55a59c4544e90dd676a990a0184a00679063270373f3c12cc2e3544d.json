{"ast":null,"code":"var _jsxFileName = \"/Users/danilomontalvo/Desktop/type/maze/src/MazeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MazeGame = () => {\n  _s();\n  const [maze, setMaze] = useState([['#', '#', '#', '#', '#'], ['#', '.', '.', '.', '#'], ['#', '#', '#', '.', '#'], ['#', '.', '#', '.', '#'], ['#', '#', '#', '#', '#']]);\n  const [playerRow, setPlayerRow] = useState(1);\n  const [playerCol, setPlayerCol] = useState(1);\n  const [gameOver, setGameOver] = useState(false);\n  const handleKeyDown = event => {\n    if (gameOver) return;\n    let newRow = playerRow;\n    let newCol = playerCol;\n    if (event.key === 'ArrowUp') newRow--;\n    if (event.key === 'ArrowDown') newRow++;\n    if (event.key === 'ArrowLeft') newCol--;\n    if (event.key === 'ArrowRight') newCol++;\n    if (isValidMove(newRow, newCol)) {\n      setPlayerRow(newRow);\n      setPlayerCol(newCol);\n      checkGameOver(newRow, newCol);\n    }\n  };\n  const isValidMove = (row, col) => {\n    if (row < 0 || row >= maze.length || col < 0 || col >= maze[row].length) {\n      return false;\n    }\n    return maze[row][col] !== '#';\n  };\n  const checkGameOver = (row, col) => {\n    if (row === maze.length - 2 && col === maze[row].length - 2) {\n      setGameOver(true);\n    }\n  };\n  const renderMaze = () => {\n    return maze.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `cell ${playerRow === rowIndex && playerCol === colIndex ? 'player' : ''}`,\n        children: cell\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maze\",\n    tabIndex: 0,\n    onKeyDown: handleKeyDown,\n    children: gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: \"Congratulations! You solved the maze!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : renderMaze()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(MazeGame, \"TcAKyV3BJN1sH/+IwWbmfo4e8J8=\");\n_c = MazeGame;\nexport default MazeGame;\nvar _c;\n$RefreshReg$(_c, \"MazeGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MazeGame","_s","maze","setMaze","playerRow","setPlayerRow","playerCol","setPlayerCol","gameOver","setGameOver","handleKeyDown","event","newRow","newCol","key","isValidMove","checkGameOver","row","col","length","renderMaze","map","rowIndex","children","cell","colIndex","className","fileName","_jsxFileName","lineNumber","columnNumber","tabIndex","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/danilomontalvo/Desktop/type/maze/src/MazeGame.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst MazeGame = () => {\n  const [maze, setMaze] = useState([\n    ['#', '#', '#', '#', '#'],\n    ['#', '.', '.', '.', '#'],\n    ['#', '#', '#', '.', '#'],\n    ['#', '.', '#', '.', '#'],\n    ['#', '#', '#', '#', '#'],\n  ]);\n  const [playerRow, setPlayerRow] = useState(1);\n  const [playerCol, setPlayerCol] = useState(1);\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleKeyDown = (event) => {\n    if (gameOver) return;\n\n    let newRow = playerRow;\n    let newCol = playerCol;\n\n    if (event.key === 'ArrowUp') newRow--;\n    if (event.key === 'ArrowDown') newRow++;\n    if (event.key === 'ArrowLeft') newCol--;\n    if (event.key === 'ArrowRight') newCol++;\n\n    if (isValidMove(newRow, newCol)) {\n      setPlayerRow(newRow);\n      setPlayerCol(newCol);\n      checkGameOver(newRow, newCol);\n    }\n  };\n\n  const isValidMove = (row, col) => {\n    if (row < 0 || row >= maze.length || col < 0 || col >= maze[row].length) {\n      return false;\n    }\n    return maze[row][col] !== '#';\n  };\n\n  const checkGameOver = (row, col) => {\n    if (row === maze.length - 2 && col === maze[row].length - 2) {\n      setGameOver(true);\n    }\n  };\n\n  const renderMaze = () => {\n    return maze.map((row, rowIndex) => (\n      <div key={rowIndex}>\n        {row.map((cell, colIndex) => (\n          <span\n            key={colIndex}\n            className={`cell ${playerRow === rowIndex && playerCol === colIndex ? 'player' : ''}`}\n          >\n            {cell}\n          </span>\n        ))}\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"maze\" tabIndex={0} onKeyDown={handleKeyDown}>\n      {gameOver ? (\n        <div className=\"game-over\">Congratulations! You solved the maze!</div>\n      ) : (\n        renderMaze()\n      )}\n    </div>\n  );\n};\n\nexport default MazeGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}